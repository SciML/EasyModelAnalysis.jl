var documenterSearchIndex = {"docs":
[{"location":"api/data_fitting_calibration/#Data-Fitting-and-Model-Calibration","page":"Data Fitting and Model Calibration","title":"Data Fitting and Model Calibration","text":"","category":"section"},{"location":"api/data_fitting_calibration/","page":"Data Fitting and Model Calibration","title":"Data Fitting and Model Calibration","text":"datafit\nbayesian_datafit","category":"page"},{"location":"api/data_fitting_calibration/#EasyModelAnalysis.datafit","page":"Data Fitting and Model Calibration","title":"EasyModelAnalysis.datafit","text":"datafit(prob,  p, t, data)\n\nFit paramters p to data measured at times t.\n\n\n\n\n\n","category":"function"},{"location":"api/data_fitting_calibration/#EasyModelAnalysis.bayesian_datafit","page":"Data Fitting and Model Calibration","title":"EasyModelAnalysis.bayesian_datafit","text":"bayesian_datafit(prob,  p, t, data)\n\nCalculate posterior distribution for paramters p given data measured at times t.\n\n\n\n\n\n","category":"function"},{"location":"api/sensitivity_analysis/#Sensitivity-Analysis","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"","category":"section"},{"location":"api/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"get_sensitivity\ncreate_sensitivity_plot","category":"page"},{"location":"api/sensitivity_analysis/#EasyModelAnalysis.get_sensitivity","page":"Sensitivity Analysis","title":"EasyModelAnalysis.get_sensitivity","text":"get_sensitivity(prob, t, x, pbounds)\n\nReturns the sensitivity of the solution at time t and state x to the parameters in pbounds.\n\n\n\n\n\n","category":"function"},{"location":"api/sensitivity_analysis/#EasyModelAnalysis.create_sensitivity_plot","page":"Sensitivity Analysis","title":"EasyModelAnalysis.create_sensitivity_plot","text":"create_sensitivity_plot(prob, t, x, pbounds)\n\nCreates bar plots of the first, second and total order Sobol indices that quantify sensitivity of the solution at time t and state x to the parameters in pbounds.\n\n\n\n\n\n","category":"function"},{"location":"examples/SEIRHD/#Analysis-of-Interventions-On-The-SEIRHD-Epidemic-Model","page":"Analysis of Interventions On The SEIRHD Epidemic Model","title":"Analysis of Interventions On The SEIRHD Epidemic Model","text":"","category":"section"},{"location":"api/threshold_interventions/#Threshold-Interventions","page":"Threshold Interventions","title":"Threshold Interventions","text":"","category":"section"},{"location":"api/threshold_interventions/","page":"Threshold Interventions","title":"Threshold Interventions","text":"stop_at_threshold\noptimal_threshold_intervention","category":"page"},{"location":"api/threshold_interventions/#EasyModelAnalysis.stop_at_threshold","page":"Threshold Interventions","title":"EasyModelAnalysis.stop_at_threshold","text":"stop_at_threshold(prob, obs, threshold)\n\nSimulates prob until obs == threshold.\n\n\n\n\n\n","category":"function"},{"location":"api/threshold_interventions/#EasyModelAnalysis.optimal_threshold_intervention","page":"Threshold Interventions","title":"EasyModelAnalysis.optimal_threshold_intervention","text":"optimal_threshold_intervention(prob, [p1 = prob.p], p2, obs, threshold, duration; maxtime)\n\nArguments\n\np1: parameters for the pre-intervention scenario. Defaults to prob.p.\np2: parameters for the pose-intervention scenario.\nobs: The observation symbolic expression.\nthreshold: The threshold for the observation.\nduration: Duration for the evaluation of intervention.\n\nKeyword Arguments\n\nmaxtime: Maximum optimzation time. Defaults to Inf.\n\nReturns\n\nopt_tspan: Optimal intervention time span.\n(s1, s2, s3): Pre-intervention, intervention, post-intervention solutions.\nret: Return code from the optimization.\n\n\n\n\n\n","category":"function"},{"location":"getting_started/#Getting-Started-with-EasyModelAnalysis","page":"Getting Started with EasyModelAnalysis","title":"Getting Started with EasyModelAnalysis","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started with EasyModelAnalysis","title":"Getting Started with EasyModelAnalysis","text":"EasyModelAnalysis.jl is made to work with a ModelingToolkit.jl model. If one is unfamiliar with ModelingToolkit, check out its tutorial before getting started. We will start by defining our model as the ModelingToolkit's README example:","category":"page"},{"location":"getting_started/","page":"Getting Started with EasyModelAnalysis","title":"Getting Started with EasyModelAnalysis","text":"using EasyModelAnalysis, Plots\n\n@parameters t σ ρ β\n@variables x(t) y(t) z(t)\nD = Differential(t)\n\neqs = [D(D(x)) ~ σ * (y - x),\n    D(y) ~ x * (ρ - z) - y,\n    D(z) ~ x * y - β * z]\n\n@named sys = ODESystem(eqs)\nsys = structural_simplify(sys)\n\nu0 = [D(x) => 2.0,\n    x => 1.0,\n    y => 0.0,\n    z => 0.0]\n\np = [σ => 28.0,\n    ρ => 10.0,\n    β => 8 / 3]\n\ntspan = (0.0, 100.0)\nprob = ODEProblem(sys, u0, tspan, p, jac = true)\nsol = solve(prob)","category":"page"},{"location":"getting_started/","page":"Getting Started with EasyModelAnalysis","title":"Getting Started with EasyModelAnalysis","text":"EasyModelAnalysis.jl then makes it easy to do complex queries about the model with simple one line commands. For example, let's the values of x at times [0.0, 1.0, 2.0]:","category":"page"},{"location":"getting_started/","page":"Getting Started with EasyModelAnalysis","title":"Getting Started with EasyModelAnalysis","text":"get_timeseries(prob, x, [0.0, 1.0, 2.0])","category":"page"},{"location":"getting_started/","page":"Getting Started with EasyModelAnalysis","title":"Getting Started with EasyModelAnalysis","text":"That's too simple, so now let's grab the time points where x achieves its maximum and minimum:","category":"page"},{"location":"getting_started/","page":"Getting Started with EasyModelAnalysis","title":"Getting Started with EasyModelAnalysis","text":"xmin, xminval = get_min_t(prob, x)","category":"page"},{"location":"getting_started/","page":"Getting Started with EasyModelAnalysis","title":"Getting Started with EasyModelAnalysis","text":"xmax, xmaxval = get_max_t(prob, x)","category":"page"},{"location":"getting_started/","page":"Getting Started with EasyModelAnalysis","title":"Getting Started with EasyModelAnalysis","text":"Was that simple? Let's see what x looks like:","category":"page"},{"location":"getting_started/","page":"Getting Started with EasyModelAnalysis","title":"Getting Started with EasyModelAnalysis","text":"phaseplot_extrema(prob, x, (x, y))","category":"page"},{"location":"getting_started/","page":"Getting Started with EasyModelAnalysis","title":"Getting Started with EasyModelAnalysis","text":"plot_extrema(prob, x)","category":"page"},{"location":"getting_started/","page":"Getting Started with EasyModelAnalysis","title":"Getting Started with EasyModelAnalysis","text":"and boom, it grabbed the correct value in something that's relatively difficult. That's the core of EasyModelAnalysis!","category":"page"},{"location":"tutorials/sensitivity_analysis/#Sensitivity-Analysis","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"","category":"section"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"In this tutorial we will showcase how to perform global sensitivity analysis of a model. To get started, let's first pull in our modified second order ODE Lorenz equation model from before:","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"using EasyModelAnalysis, Plots\n\n@parameters t σ ρ β\n@variables x(t) y(t) z(t)\nD = Differential(t)\n\neqs = [D(D(x)) ~ σ * (y - x),\n    D(y) ~ x * (ρ - z) - y,\n    D(z) ~ x * y - β * z]\n\n@named sys = ODESystem(eqs)\nsys = structural_simplify(sys)\n\nu0 = [D(x) => 2.0,\n    x => 1.0,\n    y => 0.0,\n    z => 0.0]\n\np = [σ => 28.0,\n    ρ => 10.0,\n    β => 8 / 3]\n\ntspan = (0.0, 100.0)\nprob = ODEProblem(sys, u0, tspan, p, jac = true)\nsol = solve(prob)","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"On this model we wish to perform sensitivity analyses. Global sensitivity analysis requires the specification of two things:","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"Global sensitivity of what? What is the value to be measured from the model that you want to assess the sensitivity of?\nOver what space of parameter values? This is a box of potential values for the parameters of the model.","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"The function get_sensitivity(prob, t, obs, bounds) first takes (t,obs), where t is the time point to take measurements from the model and y is the desired observable to measure. bounds is specified as an array of pairs which maps parameter symbols to arrays specifying the lower and upper bounds of its parameter range.","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"Thus for example, let's calculate the sensitivity of y(100) over the parameters (ρ, β) where rho in 020 and beta in 0100:","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"pbounds = [ρ => [0.0, 20.0], β => [0.0, 100.0]]\nsensres = get_sensitivity(prob, 100.0, y, pbounds; samples = 10000)","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"The output shows values of first_order, second_order and total_order sensitivities. These are quantities that define the nonlinear effect of the variables on the output. The first order values can be thought of as the independent interaction effects, similar to the values of a linear regression for R^2, i.e. it's the variance explained by independent effects of a given parameter. The first indices are the scaled variance terms, for example:","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"ρ_first_order = V[y(100) changing only ρ] / V[y(100)]","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"where V denotes the variance. I.e., ρ_first_order is the percentage of variance explained by only changing ρ. Being normalized, if the model is linear then ρ_first_order + β_first_order == 1, and thus its total summation tells us the degree of nonlinearity. Our simulation here has the sum of first indices as <0.2, an indication of a high degree of nonlinear interaction between the measured output and the parameters.","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"The second order indices then say how much can be attributed to changes of combinations of variables. I.e.:","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"ρ_β_second_order = V[y(100) changing only ρ and β] / V[y(100)]","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"which thus gives the percentage of variance explained by the nonlinearities of ρ and β combined. These sensitivity functions only output up to the second indices since there is a combinatorial explosion in the number of terms that need to be computed for models with more parameters. However, in this tutorial there are only two variables, and thus all variance should be explained by just these two parameters. This means that ρ_first_order + β_first_order + ρ_β_second_order should be approximately equal to 1, as all variance should be explained by the linearity or second order interactions between the two variables. Let's check this in action:","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"sensres[:ρ_first_order] + sensres[:β_first_order] + sensres[:ρ_β_second_order]","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"This is not exactly equal to 1 due to the numerical error in the integral approximations, but you can see theory in action! (Also, this is a good test for correctness of the implementation).","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"Now if you had more than two variables, is there a good way to get a sense of the \"sensitivity due to ρ\"? Using the first indices is a bad approximation to this value since it's only the measurement of the independent or linear sensitivity of the output due to ρ. Instead what one would want to do is say get the sum of the first order index ρ_first_order, plus all second order effects which include ρ, plus all third order effects that include ρ, plus ... all the way to the Nth order for N variables. Surprisingly, this summation can be computed without requiring the computation of all of the higher order indices. This is known as the \"total order index\" of a variable. In a two parameter model, we can see this in action:","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"sensres[:ρ_first_order] + sensres[:ρ_β_second_order], sensres[:ρ_total_order]","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"sensres[:β_first_order] + sensres[:ρ_β_second_order], sensres[:β_total_order]","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"Thus the total indices are a good measurement of the relative size of the total effect of each parameter on the solution of the model.","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"In summary:","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"First order indices showcase the amount of linearity and the direct linear attributions to each variable\nThe second order indices show the linear correlations in the outputs\nThe total indices measure the total effect a given variable has on the variance of the output","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"and notably, all values are normalized relative quantities.","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"Thus we can finally use the create_sensitivity_plot function to visualize the field of sensitivity results:","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"create_sensitivity_plot(prob, 100.0, y, pbounds)","category":"page"},{"location":"tutorials/sensitivity_analysis/","page":"Sensitivity Analysis","title":"Sensitivity Analysis","text":"which shows the relative sizes of the values in plots for the first, second, and total index values.","category":"page"},{"location":"tutorials/datafitting/#Calibrating-Models-to-Data","page":"Calibrating Models to Data","title":"Calibrating Models to Data","text":"","category":"section"},{"location":"tutorials/datafitting/","page":"Calibrating Models to Data","title":"Calibrating Models to Data","text":"In this tutorial we will showcase the tooling for fitting models to data. Let's take our favorite 2nd order Lorenz equation form as our model:","category":"page"},{"location":"tutorials/datafitting/","page":"Calibrating Models to Data","title":"Calibrating Models to Data","text":"using EasyModelAnalysis\n\n@parameters t σ ρ β\n@variables x(t) y(t) z(t)\nD = Differential(t)\n\neqs = [D(D(x)) ~ σ * (y - x),\n    D(y) ~ x * (ρ - z) - y,\n    D(z) ~ x * y - β * z]\n\n@named sys = ODESystem(eqs)\nsys = structural_simplify(sys)\n\nu0 = [D(x) => 2.0,\n    x => 1.0,\n    y => 0.0,\n    z => 0.0]\n\np = [σ => 28.0,\n    ρ => 10.0,\n    β => 8 / 3]\n\ntspan = (0.0, 100.0)\nprob = ODEProblem(sys, u0, tspan, p, jac = true)\nsol = solve(prob)","category":"page"},{"location":"tutorials/datafitting/","page":"Calibrating Models to Data","title":"Calibrating Models to Data","text":"Let's create a dataset with some set of parameters, and show how the datafit function can be used to discover the parameters that generated the data. To start, let's show the data format by generating a dataset. A dataset contains an array t of the time points for the data, and maps [observable => timeseries] where the timeseries is an array of values for the observable at the time points of t. We can use the get_timeseries function to generate a dataset like:","category":"page"},{"location":"tutorials/datafitting/","page":"Calibrating Models to Data","title":"Calibrating Models to Data","text":"tsave = [1.0, 2.0, 3.0]\ndata = [x => get_timeseries(prob, x, tsave), z => get_timeseries(prob, z, tsave)]","category":"page"},{"location":"tutorials/datafitting/","page":"Calibrating Models to Data","title":"Calibrating Models to Data","text":"Now let's do a datafit. We need to choose initial parameters for the fitting process and call the datafit:","category":"page"},{"location":"tutorials/datafitting/","page":"Calibrating Models to Data","title":"Calibrating Models to Data","text":"psub_ini = [σ => 27.0, β => 3.0]\nfit = datafit(prob, psub_ini, tsave, data)","category":"page"},{"location":"tutorials/datafitting/","page":"Calibrating Models to Data","title":"Calibrating Models to Data","text":"Recall that our starting parameters, the parameters the dataset was generated from, was [σ => 28.0, ρ => 10.0, β => 8 / 3]. Looks like this did a good job at recovering them!","category":"page"},{"location":"tutorials/threshold_interventions/#Designing-Threshold-Interventions","page":"Designing Threshold Interventions","title":"Designing Threshold Interventions","text":"","category":"section"},{"location":"tutorials/threshold_interventions/","page":"Designing Threshold Interventions","title":"Designing Threshold Interventions","text":"In this tutorial we will demonstrate how to analyze \"threshold interventions\", i.e. how to do calculations of model results to determine quantities around thresholds and the interventions to fix/avoid thresholds. Thresholds are meant to answer queries like \"what is the first time point where the number of COVID cases will cross 10% of the population?\", or \"when will the ball reach the wall?\". Intervention is then an assessment of policies around such thresholds. For example, \"when should we start and stop an enforced masking policy to keep the total number of COVID cases below 10% for the full time period?\". Thus these two analyses go hand in hand: threshold queries give us information about when thresholds will be reached, while intervention functions give us optimal strategies for avoiding such thresholds.","category":"page"},{"location":"tutorials/threshold_interventions/","page":"Designing Threshold Interventions","title":"Designing Threshold Interventions","text":"To see this in action, let's create a model of the population of rabbits in a post-apocolyptic Earth where fauna and humans have moved to Mars on SpaceX ships, but a few bunnies were accidentally left behind to use Earth as an approximately infinite food source. As you may recall from this model in elementary ecology courses, this is best defined by a linear ODE system which we define in the ModelingToolkit sense:","category":"page"},{"location":"tutorials/threshold_interventions/","page":"Designing Threshold Interventions","title":"Designing Threshold Interventions","text":"using EasyModelAnalysis\n@variables t 🐰(t)\n@parameters p\nD = Differential(t)\neqs = [D(🐰) ~ p * 🐰]\n@named sys = ODESystem(eqs)\nprob = ODEProblem(sys, [🐰 => 0.01], (0.0, 10.0), [p => 1.0])","category":"page"},{"location":"tutorials/threshold_interventions/","page":"Designing Threshold Interventions","title":"Designing Threshold Interventions","text":"In this model x(t) is the number of billions of bunnies (commmonly referred in the units bB) and t is given in units of months. Solving this ODE shows the number of bunnies grow exponentially over time as they are all fat and happy with plenty of grass to feed on:","category":"page"},{"location":"tutorials/threshold_interventions/","page":"Designing Threshold Interventions","title":"Designing Threshold Interventions","text":"plot(solve(prob))","category":"page"},{"location":"tutorials/threshold_interventions/","page":"Designing Threshold Interventions","title":"Designing Threshold Interventions","text":"We can ask the question, how long does it take for this exponential growth to cause the continuous number of bunnies x cross the value of 50bB? Let's ask:","category":"page"},{"location":"tutorials/threshold_interventions/","page":"Designing Threshold Interventions","title":"Designing Threshold Interventions","text":"get_threshold(prob, 🐰, 50)","category":"page"},{"location":"tutorials/threshold_interventions/","page":"Designing Threshold Interventions","title":"Designing Threshold Interventions","text":"Which, eyeballing the plot looks correct: in about 8 and half months the population will reach 50 billion bunnies!","category":"page"},{"location":"tutorials/threshold_interventions/","page":"Designing Threshold Interventions","title":"Designing Threshold Interventions","text":"But now let's create an intervention. Let's say a corporation has created a \"Earth viewing tourism\" business where humans are watch the bunny population through a telescope. Market research has found that when there are more than 3bB in the population, the reaction goes from \"that's cute\" to \"eww too many rodants\", and thus to maximize their profits the corporation wants to fire a laser that indescrimitely kills bunnies at an exponential rate (which just happens to be the same rate as twice the growth of the bunny population). But as you probably know from experience, operating death rays that cover the distance from Mars to Earth cost a lot to operate, so the corporation wants to run this for as short as possible. The company knows they will get shut down after 50 months anyways once regulators catch up, so they only need to keep the planet looking cute for that short amount of time.","category":"page"},{"location":"tutorials/threshold_interventions/","page":"Designing Threshold Interventions","title":"Designing Threshold Interventions","text":"How should the bunny murder operation commence in order to successfully maximize corporate profits? To get the desired result we use the optimal_threshold_intervention function. Our intervention will be to decrease the growth rate p = 10 to p = -10 (i.e. decrease it by twice the birth rate). What we want to know is what is the minimal time intervention to keep the population under 3bB up until a time 50. Thus the call looks as follows:","category":"page"},{"location":"tutorials/threshold_interventions/","page":"Designing Threshold Interventions","title":"Designing Threshold Interventions","text":"opt_tspan, (s1, s2, s3), ret = optimal_threshold_intervention(prob, [p => -1.0], 🐰, 3, 50);\n\nopt_tspan","category":"page"},{"location":"tutorials/threshold_interventions/","page":"Designing Threshold Interventions","title":"Designing Threshold Interventions","text":"The opt_tspan gives us the optimal timespan of the intervention: we should begin the decimation of bunny civilization when it reaches  5.15 months, and then we can turn the destruction device off at 27.8 months into our tourism operation. To see the effect of this we  can plot the results of the three sub-intervals:","category":"page"},{"location":"tutorials/threshold_interventions/","page":"Designing Threshold Interventions","title":"Designing Threshold Interventions","text":"plot(s1, lab = \"pre-intervention\")\nplot!(s2, lab = \"intervention\")\nplot!(s3, xlims = (0, s3.t[end]), ylims = (0, 5), lab = \"post-intervention\", dpi = 300)","category":"page"},{"location":"tutorials/threshold_interventions/","page":"Designing Threshold Interventions","title":"Designing Threshold Interventions","text":"Let's understand this result. Because of the exponential growth, we want to start the laser as late as possible as that will give us the most \"bang for the buck\", or rather, \"burn for the buck\", killing the most bunnies for the least amount of time. Thus we want to wait for the population to grow a bit and be easier for the laser to hit. Then we leave the laser on for as short of a time as possible. By choosing 27.8 months as the off point, this will allow for the rest of the time to be tourism friendly. When regulators finally get in touch on the 50th month, the population will have exactly reached the 3bB tipping point, allowing us to fully use that entire time for unburned bunny tourism while also making regulators more sympathetic to our burnning cause by the time they reach out to us.","category":"page"},{"location":"tutorials/threshold_interventions/","page":"Designing Threshold Interventions","title":"Designing Threshold Interventions","text":"Of course, this could also be used to uncover optimal policies for handling pandemics, but whatever your desired use case is, churn away.","category":"page"},{"location":"#EasyModelAnalysis.jl","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl","text":"","category":"section"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"EasyModelAnalysis does exactly what it says: it makes model analysis easy. Want to know the first time the number of infected individuals is about 1000? What is the probability that more than 50 people will be infected given probability distributions for the parameters? What variables are the most sensitive? Please find the parameters that best fit the model to the data. All of these, and more, given as simple one-liner queries over SciML-defined differential equation models.","category":"page"},{"location":"#Installation","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"Installation","text":"","category":"section"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"To install EasyModelAnalysis.jl, use the Julia package manager:","category":"page"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"using Pkg\nPkg.add(\"https://github.com/SciML/EasyModelAnalysis.jl\")","category":"page"},{"location":"#Contributing","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"Contributing","text":"","category":"section"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"Please refer to the SciML ColPrac: Contributor's Guide on Collaborative Practices for Community Packages for guidance on PRs, issues, and other matters relating to contributing to SciML.\nSee the SciML Style Guide for common coding practices and other style decisions.\nThere are a few community forums:\nThe #diffeq-bridged and #sciml-bridged channels in the Julia Slack\nThe #diffeq-bridged and #sciml-bridged channels in the Julia Zulip\nOn the Julia Discourse forums\nSee also SciML Community page","category":"page"},{"location":"#Reproducibility","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"Reproducibility","text":"","category":"section"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"<details><summary>The documentation of this SciML package was built using these direct dependencies,</summary>","category":"page"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"using Pkg # hide\nPkg.status() # hide","category":"page"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"</details>","category":"page"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"<details><summary>and using this machine and Julia version.</summary>","category":"page"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"using InteractiveUtils # hide\nversioninfo() # hide","category":"page"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"</details>","category":"page"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"<details><summary>A more complete overview of all dependencies and their versions is also provided.</summary>","category":"page"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"using Pkg # hide\nPkg.status(; mode = PKGMODE_MANIFEST) # hide","category":"page"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"</details>","category":"page"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"You can also download the\n<a href=\"","category":"page"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"using TOML\nversion = TOML.parse(read(\"../../Project.toml\", String))[\"version\"]\nname = TOML.parse(read(\"../../Project.toml\", String))[\"name\"]\nlink = \"https://github.com/SciML/\" * name * \".jl/tree/gh-pages/v\" * version *\n       \"/assets/Manifest.toml\"","category":"page"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"\">manifest</a> file and the\n<a href=\"","category":"page"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"using TOML\nversion = TOML.parse(read(\"../../Project.toml\", String))[\"version\"]\nname = TOML.parse(read(\"../../Project.toml\", String))[\"name\"]\nlink = \"https://github.com/SciML/\" * name * \".jl/tree/gh-pages/v\" * version *\n       \"/assets/Project.toml\"","category":"page"},{"location":"","page":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","title":"EasyModelAnalysis.jl: Quick and Easy Queries to Simulation Results","text":"\">project</a> file.","category":"page"},{"location":"api/basic_queries/#Basic-Queries","page":"Basic Queries","title":"Basic Queries","text":"","category":"section"},{"location":"api/basic_queries/#Timeseries","page":"Basic Queries","title":"Timeseries","text":"","category":"section"},{"location":"api/basic_queries/","page":"Basic Queries","title":"Basic Queries","text":"get_timeseries","category":"page"},{"location":"api/basic_queries/#EasyModelAnalysis.get_timeseries","page":"Basic Queries","title":"EasyModelAnalysis.get_timeseries","text":"get_timeseries(prob, sym, t)\n\nGet the time-series of state sym evaluated at times t.\n\n\n\n\n\n","category":"function"},{"location":"api/basic_queries/#Extrema","page":"Basic Queries","title":"Extrema","text":"","category":"section"},{"location":"api/basic_queries/","page":"Basic Queries","title":"Basic Queries","text":"get_min_t\nget_max_t\nplot_extrema\nphaseplot_extrema","category":"page"},{"location":"api/basic_queries/#EasyModelAnalysis.get_min_t","page":"Basic Queries","title":"EasyModelAnalysis.get_min_t","text":"get_min_t(prob, sym)\n\nReturns (t,min) where t is the timepoint where sym reaches its minimum min in the interval prob.tspan.\n\n\n\n\n\n","category":"function"},{"location":"api/basic_queries/#EasyModelAnalysis.get_max_t","page":"Basic Queries","title":"EasyModelAnalysis.get_max_t","text":"get_max_t(prob, sym)\n\nReturns (t,max) where t is the timepoint where sym reaches its maximum max in the interval prob.tspan.\n\n\n\n\n\n","category":"function"},{"location":"api/basic_queries/#EasyModelAnalysis.plot_extrema","page":"Basic Queries","title":"EasyModelAnalysis.plot_extrema","text":"plot_extrema(prob, sym)\n\nPlots the solution of the observable sym along with showcasing time time points where it obtains its maximum and minimum values.\n\n\n\n\n\n","category":"function"},{"location":"api/basic_queries/#EasyModelAnalysis.phaseplot_extrema","page":"Basic Queries","title":"EasyModelAnalysis.phaseplot_extrema","text":"phaseplot_extrema(prob, sym, plotsyms)\n\nPlots the phase plot solution of the observable sym along with showcasing time time points where it  obtains its maximum and minimum values. plotsyms should be given as the tuple of symbols for the observables that define the axis of the phase plot.\n\n\n\n\n\n","category":"function"}]
}
